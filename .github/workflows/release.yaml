name: Release

on:
  push:
    tags:
      - 'v*'
jobs:
  release:
    permissions:
      contents: write # required for creating GH release
    runs-on: org-cnrancher-runner-dind-x64
    steps:
    - name: Login to TCR
      uses: docker/login-action@v3
      with:
        registry: ${{ vars.TCR_REGISTRY }}
        username: ${{ secrets.TCR_USERNAME }}
        password: ${{ secrets.TCR_TOKEN }}
    - name: Setup QEMU
      uses: docker/setup-qemu-action@v3
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.ref_name}}
    - name: Install Go
      uses: actions/setup-go@v6
      with:
        go-version: 1.24.x
    - name: Lint
      uses: golangci/golangci-lint-action@v7
    - name: Verify
      run: |
        ./scripts/verify.sh
    - name: Test
      run: |
        ./scripts/test.sh
    - name: Go Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # required for creating GH release
        TAG: ${{ github.ref_name }}
        COMMIT: ${{ github.sha }}
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: "~> v2"
        args: release --clean --verbose
    - name: Image Push
      run: |
        ./scripts/image.sh
      env:
        BUILDX_OPTIONS: "--push"
        TAG: ${{ github.ref_name }}
        REPO: ${{ vars.TCR_REGISTRY }}/${{ vars.PUBLIC_REGISTRY_REPO }}
    - name: Install Helm & gh
      run: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        sudo bash ./get_helm.sh
        rm ./get_helm.sh

        curl -fsL https://github.com/cli/cli/releases/download/v2.67.0/gh_2.67.0_linux_amd64.tar.gz | tar zx
        sudo mv gh_*/bin/gh /usr/local/bin
        sudo rm -r gh_*
    - name: Upload Charts
      env:
        TAG: ${{ github.ref_name }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # required for updating GH release
      run: |
        ./scripts/chart.sh

        for f in $(find dist/artifacts/ -name '*.tgz'); do
          echo "Uploading $f to GitHub release $TAG"
          gh release upload $TAG $f
        done
        echo "Charts successfully uploaded to GitHub release $TAG"
  image-sign:
    permissions:
      contents: read
      id-token: write # required for hangar sign OIDC keyless mode
    runs-on: org-cnrancher-runner-dind-x64
    needs: [ release ]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.ref_name}}
    - name: Login to TCR
      uses: docker/login-action@v3
      with:
        registry: ${{ vars.TCR_REGISTRY }}
        username: ${{ secrets.TCR_USERNAME }}
        password: ${{ secrets.TCR_TOKEN }}
    - name: Hangar Sign
      uses: cnrancher/hangar/.github/actions/hangar-sign@main
      with:
        version: v1.9.2
        images: |
          ${{ vars.TCR_REGISTRY }}/${{ vars.PUBLIC_REGISTRY_REPO }}/rancher-flat-network-operator:${{ github.ref_name }}
          ${{ vars.TCR_REGISTRY }}/${{ vars.PUBLIC_REGISTRY_REPO }}/rancher-flat-network-cni:${{ github.ref_name }}
          ${{ vars.TCR_REGISTRY }}/${{ vars.PUBLIC_REGISTRY_REPO }}/rancher-flat-network-deploy:${{ github.ref_name }}
